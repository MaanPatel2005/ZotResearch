import firebase_setup as fb_s
# import firebase_admin
# from firebase_admin import credentials, storage, firestore

# cred = credentials.Certificate("firebase_credentials.json")
# firebase_admin.initialize_app(cred, {
#     'storageBucket': 'gs://hack2024-3e0b1.appspot.com'
# })

# db = firestore.client()

# # Function to upload file to Firebase Storage and store reference in Firestore
# def upload_file_to_storage_and_firestore(file_path, doc_ref):
#     try:
#         # Upload file to Firebase Storage
#         bucket = storage.bucket()
#         blob = bucket.blob('resumes/' + file_path.split('/')[-1])
#         blob.upload_from_filename(file_path)

#         # Get download URL
#         download_url = blob.generate_signed_url(expiration=600)  # URL expiration time in seconds

#         # Store download URL in Firestore
#         # doc_ref = db.collection('resumes').document()
#         doc_ref.set({
#             'file_name': file_path.split('/')[-1],
#             'download_url': download_url
#         })

#         print('File uploaded to Firebase Storage and reference stored in Firestore')
#     except Exception as e:
#         print('Error uploading file and storing reference:', e)

# # Example usage: Upload file and store reference in Firestore
# file_path = 'path/to/your/file.pdf'
# upload_file_to_storage_and_firestore(file_path)
class AddUser():
    def __init__(self, user: str):
        self.student = False
        self.student == True if user == 'student' else False
        self.doc = fb_s.Initializing()
    
    def init_student(self, name: str, major: str, year: int):
        doc = self.doc.student_doc.document(name)
        doc.set(
            {
                "name": name,
                "major": major,
                "year": year,
            }
        )
    
    def update_user_profile(self, name, portfolio: str, research_interest, email: str):
        doc = self.doc.student_doc.document(name)
        doc.set(
            {
                "portfolio": portfolio,
                "email": email,
                "research interest": research_interest,
            }
        )
    
    def init_advisors(self, name: str, study: str, publications: str, website: str):
        doc = self.doc.advisor_doc.document(name)
        doc.set(
            {
                "name": name,
                "study": study,
                "past publications": publications,
                "website": website,
            }
        )



if __name__ == '__main__':
    au = AddUser('student')
    au.init_student('Maan Patel', 'Computer Science', 1)
au.init_advisors('Professor Thornton', 'Computer Science', 'https://ics.uci.edu/~thornton/ics33', 'https://ics.uci.edu/~thornton')